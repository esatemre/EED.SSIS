/*
Deployment script for EED.Employee

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "EED.Employee"
:setvar DefaultFilePrefix "EED.Employee"
:setvar DefaultDataPath "C:\Users\esate\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\esate\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[CalculateSalary]...';


GO
CREATE FUNCTION [dbo].[CalculateSalary]
(
	@Age tinyint,
	@Height int
)
RETURNS INT
AS
BEGIN
	RETURN @Height * 10
END
GO
PRINT N'Creating [dbo].[UpdateEmployee]...';


GO
CREATE PROCEDURE [dbo].[UpdateEmployee]
	@FirstName nvarchar(MAX),
	@LastName nvarchar(MAX),
	@Age tinyint,
	@Height int
AS
BEGIN
	Declare @Salary decimal(8,2)
	Set @Salary = dbo.CalculateSalary(@Age,@Height)
	
	BEGIN TRY
		BEGIN TRAN
			Insert Into dbo.Employees
			(
				FirstName,
				LastName,
				Age,
				CurrentSalary,
				CreatedAt,
				ModifiedAt,
				IsDeleted
			)
			Values 
			(
				@FirstName,
				@LastName,
				@Age,
				@Salary,
				GETUTCDATE(),
				NULL,
				0
			)
		COMMIT TRAN
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN
	END CATCH

RETURN 0
END
GO
PRINT N'Update complete.';


GO
